{"version":3,"sources":["Profile.js","App.js","serviceWorker.js","index.js"],"names":["Profile","indexValue","this","props","location","data","id","specificProfile","Data","profiles","className","basicInformation","name","role","href","email","mobile","Education","map","i","j","Degree","Instution","Certifications","python","datascience","machine","techinical","tech1","tech2","tech3","tech4","tech5","tech6","React","Component","Home","info","index","key","to","pathname","App","k","l","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wSAoEeA,E,uKA7DP,IAAIC,EAAWC,KAAKC,MAAMC,SAASC,KAAKC,GACpCC,EAAgBC,EAAKC,SAASR,GAClC,OACI,6BAASS,UAAU,UACf,yBAAKA,UAAU,QACX,yBAAKA,UAAU,YACX,gCAAMH,EAAgBI,iBAAiBC,KAAvC,KACA,4BAAKL,EAAgBI,iBAAiBE,OAE1C,yBAAKH,UAAU,eACf,uBAAGI,KAAM,UAAUP,EAAgBI,iBAAiBI,OAAQR,EAAgBI,iBAAiBI,OAAU,6BAC7G,uBAAGD,KAAM,OAAOP,EAAgBI,iBAAiBK,QAAST,EAAgBI,iBAAiBK,UAGzF,yBAAKN,UAAU,SACX,yBAAKA,UAAU,eACX,2DAEJ,yBAAKA,UAAU,YACVH,EAAgBU,UAAUC,KAAI,SAACC,EAAEC,GAAH,OAC3B,4BACA,4BAAKD,EAAEE,QACX,2BAAIF,EAAEG,gBAIV,yBAAKZ,UAAU,eACX,+CAEJ,yBAAKA,UAAU,YACX,4BACA,2BAAIH,EAAgBgB,eAAeC,QACnC,2BAAIjB,EAAgBgB,eAAeE,aACnC,2BAAIlB,EAAgBgB,eAAeG,WAGvC,yBAAKhB,UAAU,eACX,2CAEJ,yBAAKA,UAAU,YACX,0KAGJ,yBAAKA,UAAU,eACX,qDAEJ,yBAAKA,UAAU,YACX,4BACA,2BAAIH,EAAgBoB,WAAWC,OAC/B,2BAAIrB,EAAgBoB,WAAWE,OAC/B,2BAAItB,EAAgBoB,WAAWG,OAC/B,2BAAIvB,EAAgBoB,WAAWI,OAC/B,2BAAIxB,EAAgBoB,WAAWK,OAC/B,2BAAIzB,EAAgBoB,WAAWM,e,GAxDjCC,IAAMC,W,cCoB5B,IAAIC,EAAK,WACP,IAAIC,EAAK7B,EAAKC,SACd,OACE,6BAASC,UAAU,UAChB2B,EAAKnB,KAAI,SAACC,EAAEmB,GAAH,OACN,yBAAK5B,UAAU,OAAO6B,IAAKD,GACzB,yBAAK5B,UAAU,WACf,4BAAKS,EAAER,iBAAiBC,MAAU,6BAClC,4BAAI,4BAAKO,EAAER,iBAAiBE,QAG5B,yBAAKH,UAAU,eACb,uBAAGI,KAAM,UAAUK,EAAER,iBAAiBI,OAAQI,EAAER,iBAAiBI,OAAU,6BAC3E,uBAAGD,KAAM,OAAOK,EAAER,iBAAiBK,QAASG,EAAER,iBAAiBK,QAAW,6BAC1E,kBAAC,IAAD,CAAMwB,GAAI,CAACC,SAAS,WAAWpC,KAAK,CAACC,GAAGgC,KAAxC,2BAQCI,EAxCf,WACE,IAAIL,EAAK7B,EAAKC,SACd,OACE,iCAEJ,kBAAC,IAAD,KACA,4BAAQC,UAAU,UACT2B,EAAKnB,KAAI,SAACyB,EAAEC,GAAH,OACR,kBAAC,IAAD,CAAMJ,GAAI,CAACC,SAAS,WAAWpC,KAAK,CAACC,GAAGsC,IAAKL,IAAKK,GAAI,WAAWA,EAAE,GAAnE,YAEK,6BAAM,6BACf,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW/C,IACxC,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,IAAIC,UAAWX,OCNnBY,QACW,cAA7BC,OAAO7C,SAAS8C,UAEe,UAA7BD,OAAO7C,SAAS8C,UAEhBD,OAAO7C,SAAS8C,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.174bc0ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Data from './data/data.json';\r\n\r\nclass Profile extends React.Component{\r\n    render(){\r\n        // {this.props.data.id}\r\n        var indexValue=this.props.location.data.id;\r\n        var specificProfile=Data.profiles[indexValue];\r\n        return(\r\n            <section className=\"parent\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-top\">\r\n                        <h3> {specificProfile.basicInformation.name} </h3>\r\n                        <em>{specificProfile.basicInformation.role}</em>\r\n                    </div>\r\n                    <div className=\"card-bottom\">\r\n                    <a href={\"mailto:\"+specificProfile.basicInformation.email}>{specificProfile.basicInformation.email}</a><br />\r\n              <a href={\"tel:\"+specificProfile.basicInformation.mobile}>{specificProfile.basicInformation.mobile}</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card2\">\r\n                    <div className=\"card-bottom\">\r\n                        <h2>Educational Qualification </h2>\r\n                    </div>\r\n                    <div className=\"card-top\">\r\n                        {specificProfile.Education.map((i,j)=>(\r\n                            <ul>\r\n                            <li>{i.Degree}</li>\r\n                        <p>{i.Instution}</p>\r\n                        </ul>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"card-bottom\">\r\n                        <h3>Certifications</h3>\r\n                    </div>\r\n                    <div className=\"card-top\">\r\n                        <ul>\r\n                        <p>{specificProfile.Certifications.python}</p>\r\n                        <p>{specificProfile.Certifications.datascience}</p>\r\n                        <p>{specificProfile.Certifications.machine}</p>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"card-bottom\">\r\n                        <h3>Experience</h3>\r\n                    </div>\r\n                    <div className='card-top'>\r\n                        <p>I have been working in APSSDC(Andhra Pradesh State Skill Development Corporation) \r\n                            since 2016 May.I have 4+ Experience in this Organisation</p>\r\n                    </div>\r\n                    <div className=\"card-bottom\">\r\n                        <h2>working Technologies</h2>\r\n                    </div>\r\n                    <div className=\"card-top\">\r\n                        <ol>\r\n                        <p>{specificProfile.techinical.tech1}</p>\r\n                        <p>{specificProfile.techinical.tech2}</p>\r\n                        <p>{specificProfile.techinical.tech3}</p>\r\n                        <p>{specificProfile.techinical.tech4}</p>\r\n                        <p>{specificProfile.techinical.tech5}</p>\r\n                        <p>{specificProfile.techinical.tech6}</p>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default Profile;","import React from 'react';\nimport './App.css';\nimport Data from './data/data.json';\nimport Profile from './Profile';\nimport {BrowserRouter,Route,Link} from 'react-router-dom';\n\nfunction App(){\n  var info=Data.profiles;\n  return(\n    <section>\n\n<BrowserRouter>\n<header className=\"header\">\n        {info.map((k,l)=>(\n          <Link to={{pathname:\"/profile\",data:{id:l}}} key={l}>{\"Profile\"+(l+1)} >> </Link>\n        ))}\n      </header><br /><br/>\n      <Route exact path=\"/profile\" component={Profile}/>\n      <Route exact path=\"/\" component={Home}/>\n      </BrowserRouter>\n    </section>\n  )\n}\n\nlet Home=()=>{\n  var info=Data.profiles;\n  return(\n    <section className=\"parent\">\n      {info.map((i,index)=>(\n          <div className=\"card\" key={index}>\n            <div className=\"car-top\">\n            <h2>{i.basicInformation.name}</h2><br />\n            <h5><em>{i.basicInformation.role}</em></h5>\n            </div>\n\n            <div className=\"card-bottom\">\n              <a href={\"mailto:\"+i.basicInformation.email}>{i.basicInformation.email}</a><br />\n              <a href={\"tel:\"+i.basicInformation.mobile}>{i.basicInformation.mobile}</a><br />\n              <Link to={{pathname:\"/profile\",data:{id:index}}}>View Profile >> </Link>\n            </div>\n          </div>\n        ))}\n    </section>\n\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}